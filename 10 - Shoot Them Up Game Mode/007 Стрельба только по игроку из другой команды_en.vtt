WEBVTT
Kind: captions
Language: en

00:00:05.640 --> 00:00:09.930
All characters are now assigned to teams and in the perception component we

00:00:09.930 --> 00:00:14.461
can determine whether the observed actor is our enemy or not.

00:00:14.461 --> 00:00:21.580
For this purpose, we will create a special function in STUUtils. First, let's include the header file player state.

00:00:22.974 --> 00:00:28.807
The function will return a boolean value, it will be static. Let's call it AreEnemies.

00:00:29.586 --> 00:00:35.496
It will have two parameters of the AController type: Controller1 and Controller2.

00:00:39.204 --> 00:00:42.314
At the beginning of the function, check that the controllers are not null.

00:00:44.593 --> 00:00:47.780
And also check that these are not the same controller.

00:00:47.780 --> 00:00:52.383
The function can be called from anywhere, so it's worth taking care of that.

00:00:52.383 --> 00:00:56.326
Next, we get a pointer to the player state of each of the controllers.

00:01:01.245 --> 00:01:06.345
The function will return true if the player state is not null

00:01:10.160 --> 00:01:17.326
and if the TeamIDs do not match. The TeamID value is obtained using the GetTeamID function.

00:01:20.868 --> 00:01:25.925
The function is written, now let's use it. Return to the perception component.

00:01:25.925 --> 00:01:33.237
The function takes two controllers. We already have one pointer to the controller - this is the component owner's controller.

00:01:33.751 --> 00:01:40.015
We need to get the second one. Let's cast PercieveActor to pawn. Let's call the pointer PercievePawn.

00:01:44.828 --> 00:01:52.484
Let's create a local boolean variable and write a condition in which two characters are enemies.

00:01:52.484 --> 00:01:58.316
The first condition that must be met is that the PercievePawn pointer must not be null.

00:01:58.316 --> 00:02:06.762
And the second is the value returned by the AreEnemies function. We pass in it the controller of the owner of the component

00:02:09.000 --> 00:02:11.260
and also the controller of PercievePawn.

00:02:14.860 --> 00:02:23.667
Add the AreEnemies condition to the if. If the current pawn is not our enemy, then we do not even consider it as a candidate for BestPawn.

00:02:23.667 --> 00:02:29.205
The AreEnemies function is static - therefore it is available in any class and can be used

00:02:29.205 --> 00:02:34.074
in other situations, for example, you can add logic so that members of the same team

00:02:34.074 --> 00:02:40.199
do not harm each other. There is a controller parameter in the OnTakeAnyDamage function that caused the damage,

00:02:40.199 --> 00:02:48.064
so you can call the AreEnemies function with the given controller and the pawn controller that owns the health component.

00:02:49.393 --> 00:02:53.707
Before starting, let's open the blueprint game mode and set a more

00:02:53.707 --> 00:03:00.328
adequate round time, for example, 120 seconds and let the number of players be 3.

00:03:02.375 --> 00:03:04.975
Compile. We launch.

00:03:06.000 --> 00:03:14.846
We kill the enemy. NPC, who with us on the same team does not shoot at us. We can also turn on debug information

00:03:14.846 --> 00:03:23.111
and check that we are really determined. A blue debug sphere is displayed, but the NPC does not respond to us.

